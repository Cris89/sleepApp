#ifndef MARGOT_C_HEADER_H
#define MARGOT_C_HEADER_H


#include <stddef.h>
#include <inttypes.h>





/**
 * WARNING:
 * This file is autogenerated from the "margotcli" utility function.
 * Any changes to this file might be overwritten, thus in order to 
 * perform a permanent change, please update the configuration file 
 * and re-generate this file. 
 */ 




// The interface for the managed block "sleeping"
#ifndef BLOCK_SLEEPING_AUTOTUNED
#define BLOCK_SLEEPING_AUTOTUNED
#endif // BLOCK_SLEEPING_AUTOTUNED


int margot_sleeping_update( int* param1, int* param2, int* param3 );


void margot_sleeping_start_monitor( void );


void margot_sleeping_log( void );


void margot_sleeping_stop_monitor( int num_threads, long double error );


void margot_sleeping_configuration_applied( void );


void margot_sleeping_configuration_rejected( void );


void margot_sleeping_change_state( const char* new_state );


#define MARGOT_MANAGED_BLOCK_SLEEPING \
if (margot_sleeping_update( param1, param2, param3 )) {\
margot_sleeping_configuration_applied(); }\
margot_sleeping_start_monitor(  );\
for(int flag = 1; flag == 1; flag = 0, margot_sleeping_stop_monitor( num_threads, error ) )


void margot_sleeping_goal_my_throughput_goal_set_value(const double new_value);

void margot_sleeping_goal_my_error_goal_set_value(const double new_value);






// The global initialization method


void margot_init( void );


#endif // MARGOT_C_HEADER_H

